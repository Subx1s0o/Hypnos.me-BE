generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type GoldSample {
  sampleValue  String
  weightMale   Float
  weightFemale Float
}

type Media {
  main    MediaDetail
  media_1 MediaDetail?
  media_2 MediaDetail?
  media_3 MediaDetail?
  media_4 MediaDetail?
}

type MediaDetail {
  url    String
  status MediaStatus
}

enum MediaStatus {
  fulfilled
  pending
  rejected
  not_uploaded
}

model products {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  createdAt       DateTime     @default(now()) @db.Date
  updatedAt       DateTime     @updatedAt
  media           Media
  price           Int
  discountPercent Int?
  isPriceForPair  Boolean      @default(false)
  description     String
  category        Categories
  width           Float?
  thickness       Float?
  views           Int          @default(0)
  quantity        Int
  weight          Float?
  pairWeight      Float?
  goldSamples     GoldSample[]
  cartItems       CartItem[]
}

model users {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  secondName     String
  email          String           @unique
  password       String
  bonuses        Int              @default(0)
  role           Role             @default(user)
  bonusesHistory bonusesHistory[]
  cart           Cart?
  phone          String?
  birthday       DateTime?
  referredCode   String           @unique
  referredBy     String?
  subscribed     Boolean          @default(false)
  createdAt      DateTime         @default(now()) @db.Date
  updatedAt      DateTime         @updatedAt
}

enum Role {
  admin
  user
  owner
}

type bonusesHistory {
  amount       Int
  receivedDate DateTime
  description  String
}

enum Categories {
  classic
  neo_classic
  conceptual
  geometrical
  symbolical
  futuristic
}

model promocodes {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  code           String   @unique
  discount       Int
  count          Int
  expirationDate DateTime
}

model Cart {
  id     String     @id @default(auto()) @map("_id") @db.ObjectId
  userId String     @unique @db.ObjectId
  user   users      @relation(fields: [userId], references: [id])
  items  CartItem[]
}

model CartItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  cartId    String   @db.ObjectId
  productId String   @db.ObjectId
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   products @relation(fields: [productId], references: [id])
  quantity  Int
}
